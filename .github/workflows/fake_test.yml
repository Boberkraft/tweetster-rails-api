name: Run Fake test

on:
  repository_dispatch:
    types: [on-demand-test]

jobs:
  run-tests:
    name: OK
    runs-on: ubuntu-latest
    env:
      REPOSITORY_NAME: ${{ github.event.client_payload.repository_name }}
      BRANCH_NAME: ${{ github.event.client_payload.branch_name }}
      TOKEN: ${{ secrets.TOKEN }}
      MAIN_REPO: ${{ github.workspace }}/tweetster-rails-api
      THIS_REPO: ${{ github.workspace }}/${{ github.event.client_payload.repository_name }}
      SCRIPTS: ${{ github.workspace }}/tweetster-rails-api/lib/workflow
    services:
      mysql:
        image: mysql:5.5
        ports:
          - 3306
        env:
          MYSQL_DATABASE: super-db-test
          MYSQL_ROOT_PASSWORD: admin
        options: --health-cmd="mysqladmin ping" --health-interval=20s --health-timeout=5s --health-retries=7

    steps:
      - uses: baptouuuu/setup-neo4j@v1.0.0
        with:
          tag: '2.3.0'

      - name: DEBUG INFO
        run: |
          echo "Running test"
          echo "branch_name: ${{ github.event.client_payload.branch_name }}"
          echo "repository_name: ${{ github.event.client_payload.repository_name }}"
          echo "comment_repository_name: ${{ github.event.client_payload.comment_repository_name }}"
          echo "comment_id: ${{ github.event.client_payload.comment_id }}"

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.3.3

      - name: ⬅️ tweetster-rails-api
        uses: actions/checkout@v2
        with:
          repository: Boberkraft/tweetster-rails-api
          path: tweetster-rails-api

      - name: create 🏃 link
        id: vars
        run: |
          ruby $MAIN_REPO/lib/workflow/create_run_url.rb
      - name: send 🏃
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ env.TOKEN }}
          repository: ${{ github.event.client_payload.comment_repository_name }}
          comment-id: ${{ github.event.client_payload.comment_id }}
          body: |
            > 🏃 [${{ github.event.client_payload.repository_name }}](${{ steps.vars.outputs.run-url }})

      - name: starting MySQL
        run: sudo service mysql start

      - name: DEBUG testing if db works
        run: |
          export MYSQL_HOST=127.0.0.1
          export MYSQL_TCP_PORT=${{ job.services.mysql.ports['3306'] }}
          mysql -e 'CREATE DATABASE IF NOT EXISTS wp_cli_test;' -uroot -padmin

      - name: apt-get install
        run: |
          sudo apt-get install tree
          sudo apt-get install libmariadbclient-dev

      - name: ⬅️ chess
        uses: actions/checkout@v2
        with:
          repository: Boberkraft/chess
          path: chess

      - name: ⬅️ Rails-4-Twitter-Clone
        uses: actions/checkout@v2
        with:
          repository: Boberkraft/Rails-4-Twitter-Clone
          path: Rails-4-Twitter-Clone

      - name: change branches on all repos
        run: ruby $SCRIPTS/change_branches.rb

      - name: create gems cache key
        id: hash_key
        run: |
          echo ::set-output name=key::$THIS_REPO/Gemfile.lock
          echo $KEY
          cat $KEY
        env:
          KEY: ${{ steps.hash_key.outputs.key }}

      - name: create gems cache
        uses: actions/cache@v2
        with:
          path: ~/vendor/bundle
          key: ${{ runner.os }}-gem-${{ env.REPOSITORY_NAME }}-${{ hashFiles(steps.hash_key.outputs.key) }}
          restore-keys: |
            ${{ runner.os }}-gem-${{ env.REPOSITORY_NAME }}-
            ${{ runner.os }}-gem-
            ${{ runner.os }}-

      - name: install bundler
        run: |
          gem install bundler --version=1.13  --no-ri --no-rdoc
          bundle config path ~/vendor/bundle
          gem list

      - name: bundle
        working-directory: ${{ env.THIS_REPO }}
        run: |
          gem list

          bundle --jobs 4 --retry 3

          cp db/schema.rb-ci db/schema.rb-ci
          mv config/database.yml-ci config/database.yml

      - name: rake db:migrate
        working-directory: ${{ env.THIS_REPO }}
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
        run: |
          bundle exec rake db:create RAILS_ENV=test
          bundle exec rake db:schema:load RAILS_ENV=test
          bundle exec rake db:migrate RAILS_ENV=test

      - name: rspec
        working-directory: ${{ env.THIS_REPO }}
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
        run: bundle exec rspec

      - name: send 💪🙂
        uses: peter-evans/create-or-update-comment@v1
        if: success()
        with:
          token: ${{ env.TOKEN }}
          repository: ${{ github.event.client_payload.comment_repository_name }}
          comment-id: ${{ github.event.client_payload.comment_id }}
          body: |
            > 💪🙂 [${{ github.event.client_payload.repository_name }}](${{ steps.vars.outputs.run-url }})

      - name: send 💔😭
        uses: peter-evans/create-or-update-comment@v1
        if: failure()
        with:
          token: ${{ env.TOKEN }}
          repository: ${{ github.event.client_payload.comment_repository_name }}
          comment-id: ${{ github.event.client_payload.comment_id }}
          body: |
            > 💔😭 [${{ github.event.client_payload.repository_name }}](${{ steps.vars.outputs.run-url }})